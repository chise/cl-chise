(in-package :chise)

(defun read-entity-reference (in)
  (when (eql (peek-char nil in nil) #\&)
    (let ((str "")
	  char flag pos code
	  ccs-base prefix plane)
      (loop (cond ((eql (setq char (read-char in nil)) #\;)
		   (setq flag t)
		   (return str))
		  ((member char '(nil #\  #\Tab #\Newline #\Return))
		   (return str))
		  (t
		   (setq str (format nil "~a~a" str char)))))
      (cond
	(flag
	 (cond
	   ((and (setq pos (search "MJ" str))
		 (setq code (parse-integer str :start (+ pos 2) :junk-allowed t)))
	    (setq ccs-base "mj")
	    )
	   ((and (setq pos (search "AJ1-" str))
		 (setq code (parse-integer str :start (+ pos 4) :junk-allowed t)))
	    (setq ccs-base
		  (cond ((<= code  8283) "adobe-japan1-0")
			((<= code  8358) "adobe-japan1-1")
			((<= code  8719) "adobe-japan1-2")
			((<= code  9353) "adobe-japan1-3")
			((<= code 15443) "adobe-japan1-4")
			((<= code 20316) "adobe-japan1-5")
			((<= code 23057) "adobe-japan1-6")
			(t               "adobe-japan1-7")
			))
	    )
	   ((and (setq pos (search "HD-JA-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/ja")
	    )
	   ((and (setq pos (search "HD-JB-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/jb")
	    )
	   ((and (setq pos (search "HD-JC-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/jc")
	    )
	   ((and (setq pos (search "HD-JD-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/jd")
	    )
	   ((and (setq pos (search "HD-FT-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/ft")
	    )
	   ((and (setq pos (search "HD-IA-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/ia")
	    )
	   ((and (setq pos (search "HD-IB-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/ib")
	    )
	   ((and (setq pos (search "HD-HG-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/hg")
	    )
	   ((and (setq pos (search "HD-JT-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/jt")
	    )
	   ((and (setq pos (search "HD-KS-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 10
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/ks")
	    )
	   ((and (setq pos (search "HD-TK-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 10
					       :junk-allowed t)))
	    (setq ccs-base "hanyo-denshi/tk")
	    )
	   ((and (setq pos (search "GT-" str))
		 (setq code (parse-integer str :start (+ pos 3) :junk-allowed t)))
	    (setq ccs-base "gt")
	    )
	   ((and (setq pos (search "J90-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "=jis-x0208@1990")
	    )
	   ((and (setq pos (search "JX1-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jis-x0213-1@2000")
	    )
	   ((and (setq pos (search "JX2-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jis-x0213-2")
	    )
	   ((and (setq pos (search "JX3-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jis-x0213-1@2004")
	    )
	   ((and (setq pos (search "JSP-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jis-x0212")
	    )
	   ((and (setq pos (search "G0-" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "gb2312")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "IWDSCDP-" str))
		 (setq code (parse-integer str :start (+ pos 8) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "big5-cdp@iwds-1")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CDP-v" str))
		 (setq plane (parse-integer str :start (+ pos 5) :end (+ pos 8)))
		 (eql (elt str (+ pos 8)) #\-)
		 (setq code (parse-integer str :start (+ pos 9) :radix 16
					       :junk-allowed t)))
	    (setq plane (format nil "~3,'0d" plane))
	    (setq ccs-base "big5-cdp-var-")
	    )
	   ((and (setq pos (search "CDP-i" str))
		 (setq plane (parse-integer str :start (+ pos 5) :end (+ pos 8)))
		 (eql (elt str (+ pos 8)) #\-)
		 (setq code (parse-integer str :start (+ pos 9) :radix 16
					       :junk-allowed t)))
	    (setq plane (format nil "~3,'0d" plane))
	    (setq ccs-base "big5-cdp-itaiji-")
	    )
	   ((and (setq pos (search "CDP-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "big5-cdp")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "B-" str))
		 (setq code (parse-integer str :start (+ pos 2) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "big5-eten")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "M-H" str))
		 (setq code (parse-integer str :start (+ pos 3)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa/ho")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "M-p" str))
		 (setq code (parse-integer str :start (+ pos 3)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa/+p")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "M-2p" str))
		 (setq code (parse-integer str :start (+ pos 4)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa/+2p")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "r2M-" str))
		 (setq code (parse-integer str :start (+ pos 4)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa@rev2")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "r1M-" str))
		 (setq code (parse-integer str :start (+ pos 4)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa@rev1")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "M-" str))
		 (setq code (parse-integer str :start (+ pos 2)
					       :junk-allowed t)))
	    (setq ccs-base "daikanwa")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "DJT-" str))
		 (setq code (parse-integer str :start (+ pos 4)
					       :junk-allowed t)))
	    (setq ccs-base "daijiten")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "K0-" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ks-x1001")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "EGB-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "iso-ir165")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "J83-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "=jis-x0208@1983")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "KOSEKI-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "koseki")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "GT-K" str))
		 (setq code (parse-integer str :start (+ pos 4)
					       :junk-allowed t)))
	    (setq ccs-base "gt-k")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "U-v" str))
		 (setq plane (parse-integer str :start (+ pos 3) :end (+ pos 6)))
		 (eql (elt str (+ pos 6)) #\+)
		 (setq code (parse-integer str :start (+ pos 7) :radix 16
					       :junk-allowed t)))
	    (setq plane (format nil "~3,'0d" plane))
	    (setq ccs-base "ucs-var-")
	    )
	   ((and (setq pos (search "U-i" str))
		 (setq plane (parse-integer str :start (+ pos 3) :end (+ pos 6)))
		 (eql (elt str (+ pos 6)) #\+)
		 (setq code (parse-integer str :start (+ pos 7) :radix 16
					       :junk-allowed t)))
	    (setq plane (format nil "~3,'0d" plane))
	    (setq ccs-base "ucs-itaiji-")
	    )
	   ((and (setq pos (search "J78-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jis-x0208@1978/1pr")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "RUI6-" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ruimoku-v6")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "JC3-" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "jef-china3")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "C" str))
		 (<  (+ pos 2) (length str))
		 (setq plane (parse-integer str :start (+ pos 1) :end (+ pos 2)
						:junk-allowed t))
		 (<= 1 plane)(<= plane 7)
		 (eql (elt str (+ pos 2)) #\-)
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "cns11643-")
	    )
	   ((and (setq pos (search "CHISE-HDIC-TSJ" str))
		 (setq code (parse-integer str :start (+ pos 14) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "chise-hdic-tsj")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CHISE-HDIC-SYP" str))
		 (setq code (parse-integer str :start (+ pos 14) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "chise-hdic-syp")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CHISE-HDIC-KTB" str))
		 (setq code (parse-integer str :start (+ pos 14) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "chise-hdic-ktb")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CHISE-HDIC-KTBS" str))
		 (setq code (parse-integer str :start (+ pos 15) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "chise-hdic-ktb-seal")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG001-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-jou")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG002-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-keg")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG003-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-dng")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG005-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-mam")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG006-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-drt")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG007-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kgk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG008-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-myz")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG009-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kda")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG010-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-khi")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG011-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-khm")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG012-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-fhs")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG013-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-hok")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG014-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kyd")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG015-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sok")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG016-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-yhk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG017-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kak")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG018-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kar")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG019-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kae")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG022-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sys")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG024-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-tsu")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG025-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-tzj")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG026-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-hos")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG027-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kkh")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG028-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-nak")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG029-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-jhk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG030-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-hod")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG031-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-gok")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG033-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-ink")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG034-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-nto")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG036-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-nkm")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG037-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-k24")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG038-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-ini")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG039-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-nkk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG041-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kcc")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG042-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kcj")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG043-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kbk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG044-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sik")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG046-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-skk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG047-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kyu")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG048-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-ksk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG049-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-wan")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG050-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-okd")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG054-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-wad")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG055-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kmi")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG056-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-zkd")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG057-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-doh")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG058-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-jyu")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG060-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-tzs")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG061-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sai")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG062-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kad")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG064-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kss")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG066-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kyo")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG068-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-ykk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG070-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-saa")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG071-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sab")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG072-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-wks")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG073-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-wke")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG074-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-smk")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG077-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sgs")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG078-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-sts")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HNG079-" str))
		 (setq code (parse-integer str :start (+ pos 7)
					       :junk-allowed t)))
	    (setq ccs-base "==hng-kkd")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SW-JIGUGE-" str))
		 (setq code (parse-integer str :start (+ pos 10)
					       :junk-allowed t)))
	    (setq ccs-base "shuowen-jiguge")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SW-JIGUGE4-" str))
		 (setq code (parse-integer str :start (+ pos 11)
					       :junk-allowed t)))
	    (setq ccs-base "==shuowen-jiguge4")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SW-JIGUGE5-" str))
		 (setq code (parse-integer str :start (+ pos 11)
					       :junk-allowed t)))
	    (setq ccs-base "==shuowen-jiguge5")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SW-JIGUGE30-" str))
		 (setq code (parse-integer str :start (+ pos 12)
					       :junk-allowed t)))
	    (setq ccs-base "==shuowen-jiguge-A30")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "HZK" str))
		 (setq plane (parse-integer str :start (+ pos 3) :end (+ pos 5)))
		 (eql (elt str (+ pos 5)) #\-)
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "hanziku-")
	    )
	   ((and (setq pos (search "BUCS+" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "=>ucs@bucs")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "ESU+" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@esu")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "NIWDSU+" str))
		 (setq code (parse-integer str :start (+ pos 7) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@iwds-1/normalized")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "IWDSU+" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@iwds-1")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "cgnU+" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@cognate")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "compU+" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@component")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "IWDS1-" str))
		 (setq code (parse-integer str :start (+ pos 6) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "iwds-1")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "hanaJU+" str))
		 (setq code (parse-integer str :start (+ pos 7) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@JP/hanazono")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "dJU+" str))
		 (setq code (parse-integer str :start (+ pos 4) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@JP")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "J04U+" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@jis/2004")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "J00U+" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@jis/2000")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "J90U+" str))
		 (setq code (parse-integer str :start (+ pos 5) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@jis/1990")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "U-" str))
		 (setq code (parse-integer str :start (+ pos 2) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@iso")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "IU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@iso")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "UU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@unicode")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "GU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@gb")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "JU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@jis")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@cns")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "KU+" str))
		 (setq code (parse-integer str :start (+ pos 3) :radix 16
					       :junk-allowed t)))
	    (setq ccs-base "ucs@ks")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SJG2-" str))
		 (setq code (parse-integer str :start (+ pos 5)
					       :junk-allowed t)))
	    (setq ccs-base "shinjigen@rev")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "SJG1-" str))
		 (setq code (parse-integer str :start (+ pos 5)
					       :junk-allowed t)))
	    (setq ccs-base "shinjigen@1ed")
	    (setq plane nil)
	    )
	   ((and (setq pos (search "CB" str))
		 (setq code (parse-integer str :start (+ pos 2)
					       :junk-allowed t)))
	    (setq ccs-base "cbeta")
	    (setq plane nil)
	    )
	   )
	 (cond ((eql pos 1)
		(setq prefix "=")
		)
	       ((eql pos 3)
		(cond
		  ((eql (search "A-" str) 1)
		   (setq prefix "=>")
		   )
		  ((eql (search "o-" str) 1)
		   (setq prefix "=+>")
		   )
		  ((eql (search "G-" str) 1)
		   (setq prefix "=>>")
		   )
		  ((eql (search "R-" str) 1)
		   (setq prefix "===")
		   )
		  ((eql (search "I-" str) 1)
		   (setq prefix "===")
		   ))
		)
	       ((eql pos 4)
		(cond
		  ((eql (search "g2-" str) 1)
		   (setq prefix "==")
		   )
		  ((eql (search "A2-" str) 1)
		   (setq prefix "==>")
		   ))
		))
	 ;; (format t "prefix = ~a, ccs = ~a, plane = ~a, code = ~a~%"
	 ;; 	 prefix ccs-base plane code)
	 (or (and prefix
		  (or (chise:decode-char (format nil "~a~a~a"
						 prefix ccs-base
						 (or plane ""))
					 code)
		      (cond
			((string= ccs-base "jis-x0213-1@2000")
			 (chise:decode-char (format nil "~ajis-x0213-1" prefix)
					    code)
			 )
			((string= ccs-base "jis-x0208@1978/1pr")
			 (chise:decode-char (format nil "~ajis-x0208@1978" prefix)
					    code)
			 )
			((string= ccs-base "big5-eten")
			 (chise:decode-char (format nil "~abig5" prefix)
					    code)
			 )
			((string= ccs-base "shinjigen@rev")
			 (chise:decode-char (format nil "~ashinjigen" prefix)
					    code)
			 )
			(t
			 (chise:define-char
			     (list (cons (format nil "~a~a~a"
						 prefix ccs-base
						 (or plane ""))
					 code)))
			 ))))
	     (concatenate 'string str ";"))
	 )
	(t
	 str)))))
